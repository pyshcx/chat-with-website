#!/usr/bin/env python3
"""
Setup script for Chat with Website project
"""

import os
import subprocess
import sys
from pathlib import Path

def run_command(command, description):
    """Run a shell command and handle errors"""
    print(f"🔄 {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"✅ {description} completed")
        return True
    except subprocess.CalledProcessError as e:
        print(f"❌ {description} failed: {e.stderr}")
        return False

def setup_project():
    """Main setup function"""
    print("🚀 Setting up Chat with Website project...\n")
    
    # Check Python version
    if sys.version_info < (3, 8):
        print("❌ Python 3.8 or higher is required")
        sys.exit(1)
    
    print(f"✅ Python {sys.version_info.major}.{sys.version_info.minor} detected")
    
    # Install requirements
    if not run_command("pip install -r requirements.txt", "Installing Python dependencies"):
        print("❌ Failed to install requirements. Try: pip install --upgrade pip")
        sys.exit(1)
    
    # Install Playwright browsers
    if not run_command("playwright install chromium", "Installing Playwright browser"):
        print("⚠️ Playwright installation failed, JS rendering may not work")
    
    # Create necessary directories
    directories = ["data", "logs", "notebooks"]
    for dir_name in directories:
        Path(dir_name).mkdir(exist_ok=True)
        print(f"📁 Created {dir_name}/ directory")
    
    # Check .env file
    env_file = Path(".env")
    if not env_file.exists():
        print("⚠️ .env file not found. Creating template...")
        with open(".env", "w") as f:
            f.write("GOOGLE_API_KEY=your_api_key_here\n")
            f.write("LANGCHAIN_TRACING_V2=false\n")
        print("📝 Created .env template - please add your Google API key")
    
    print("\n🎉 Setup complete!")
    print("\n📋 Next steps:")
    print("1. Add your Google API key to .env file")
    print("2. Run API server: python api/main.py")
    print("3. Run Gradio UI: python demo.py")
    print("4. Visit: http://localhost:7860")
    
    # Test API key
    import os
    from dotenv import load_dotenv
    load_dotenv()
    
    if os.getenv("GOOGLE_API_KEY", "").startswith("your_api_key_here"):
        print("\n⚠️ Don't forget to set your GOOGLE_API_KEY in .env!")
        print("Get it free at: https://makersuite.google.com/app/apikey")

if __name__ == "__main__":
    setup_project()
